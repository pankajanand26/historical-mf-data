  # This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: amfi-data-update

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  schedule:
    - cron: "0 13 * * *"

permissions: write-all

jobs:
  get:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.13"]

    steps:
    - name: Get current date
      id: date
      run: echo "date=$(date +'%Y%m%d')" >> $GITHUB_ENV
      # run: echo "::set-output name=date::$(date +'%Y%m%d')"
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r $GITHUB_WORKSPACE/requirements.txt
    - name: fetch-data
      run: python $GITHUB_WORKSPACE/src/amfi/amfi_fetch.py
    - name: create-db
      run: python $GITHUB_WORKSPACE/src/amfi/amfi_data_process.py
    - name: stage changes
      run: git add data/*
    - name: commit changes
      uses: stefanzweifel/git-auto-commit-action@v5
      # with:
      #   commit_message: "update amfi data"
      #   commit_user_name: My GitHub Actions Bot # defaults to "github-actions[bot]"
      #   commit_user_email: my-github-actions-bot@example.org # defaults to "41898282+github-actions[bot]@users.noreply.github.com"
      #   commit_author: Author <actions@github.com> # defaults to "username <username@users.noreply.github.com>", where "username" belongs to the author of the commit that triggered the run    - name: create tar gzip
    - name: create tar gzip
      run: tar -czvf funds.db.tar.gz funds.db
    - name: echo event_name
      run: echo ${{ github.event_name }}
    - name: create new release
      if: ${{ github.event_name == 'push'|| github.event_name  == 'schedule' }}
      run: gh release create v0.${date} --generate-notes *.db.tar.gz
      env: 
        GH_TOKEN: ${{ github.token }} 
